
#include <Wire.h>
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h> //  include Library

#define OLED_MOSI    11
#define OLED_CLK    12
#define OLED_DC    9
#define OLED_CS    8
#define OLED_RESET    10
#define fsr_pin A0
Adafruit_SSD1306 display(OLED_MOSI,OLED_CLK,OLED_DC,OLED_RESET,OLED_CS); //define variables

static const unsigned char PROGMEM logo[]
{
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11111111, B11111100, B00000000, B00000000, B00000000, 
  B00000000, B00000001, B11110011, B11111111, B11111110, B01111100, B00000000, B00000000, 
  B00000000, B00000001, B11111011, B11111100, B11111111, B01111100, B00000000, B00000000, 
  B00000000, B00000001, B11111011, B11110000, B01111110, B01111100, B00000000, B00000000, 
  B00000000, B00000001, B11011000, B11111101, B11111100, B11011100, B00000000, B00000000, 
  B00000000, B00000000, B11101110, B01111111, B11110011, B10111100, B00000000, B00000000, 
  B00000000, B00000000, B11110011, B00011111, B11100110, B01111100, B00000000, B00000000, 
  B00000000, B00000000, B11111001, B11001111, B10001100, B11111000, B00000000, B00000000, 
  B00000000, B00000000, B11101110, B11100111, B00011011, B10111000, B00000000, B00000000, 
  B00000000, B00000000, B11110011, B01101000, B00110110, B01111000, B00000000, B00000000, 
  B00000000, B00000000, B01111101, B11101101, B10111100, B11110000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B01111111, B10110011, B11100000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B10110111, B10110111, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B01100111, B11110111, B01111111, B00110000, B00000000, B00000000, 
  B00000000, B00000000, B01110001, B11100111, B00111100, B01110000, B00000000, B00000000, 
  B00000000, B00000000, B01111000, B00000111, B00000000, B01110000, B00000000, B00000000, 
  B00000000, B00000000, B00111000, B00000111, B00000000, B01110000, B00000000, B00000000, 
  B00000000, B00000000, B00111100, B00110111, B01100001, B11110000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B01110111, B01110011, B11110000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B11110111, B01111011, B11110000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B11110111, B01111011, B11100000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B11110110, B01111011, B11100000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B11110000, B01111011, B11100000, B00000000, B00000000, 
  B00000000, B00000000, B00111110, B11111111, B11111011, B11100000, B00000000, B00000000, 
  B00000000, B00000000, B00011110, B11111111, B11111011, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00000110, B11100000, B00111011, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000010, B11101111, B00111010, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11001111, B10111000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  
};
static const unsigned char PROGMEM logo2[]
{
 B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
 B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000001, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000001, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000011, B11000000, B00000100, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000011, B11100000, B00001010, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000111, B11110000, B00111010, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000111, B11110000, B00011100, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000111, B11110000, B00011100, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B11110000, B00011100, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00111111, B11111000, B00111000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111110, B00111100, B00001100, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111100, B00111100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01110000, B00011100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11111100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11111100, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11111111, B11111111, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11111111, B11001111, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11000000, B00000111, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B10000000, B00000001, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B00000000, B00000001, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00001110, B00000000, B00000000, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111000, B00000000, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B11111111, B11111111, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B11111111, B11111111, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B11111111, B11111111, B11000000, B00000000, B00000000, 
  B00000000, B00000000, B00000111, B11111111, B11111111, B10000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11111111, B11111111, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11111111, B10010000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  
};
 const int ledCount = 10;    // the number of LEDs in the bar graph
int ledPins[] = {1,2, 3, 4, 5, 6, 7,13 };  


void setup() {
 Serial.begin(9600);
 // put your setup code here, to run once:
 for (int thisLed = 0; thisLed < ledCount; thisLed++) 
 {
     pinMode(ledPins[thisLed], OUTPUT);
 }

 display.begin(SSD1306_SWITCHCAPVCC,0x3D);
 display.clearDisplay();
 display.drawBitmap(0,0,logo2,64,32,WHITE);
 display.display();
}

void loop() 
{
  int fsr_value = analogRead(fsr_pin); // 讀取FSR
  int led_value = map(fsr_value, 0, 256, 0, 8); // 從0~1023映射到0~10
  for (int thisLed = 0; thisLed < ledCount; thisLed++)
  {
    if (thisLed < led_value) 
      {
        digitalWrite(ledPins[thisLed], HIGH);
        display.clearDisplay();
        display.drawBitmap(0,0,logo,96,48,WHITE);
        display.display();
      }
    else
      {
        digitalWrite(ledPins[thisLed], LOW);
        display.clearDisplay();
        display.drawBitmap(0,0,logo2,64,32,WHITE);
        display.display();
      }
  }
 
  
}
